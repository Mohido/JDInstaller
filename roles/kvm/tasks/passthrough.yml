---

- name: List GPU Groups
  ansible.builtin.shell: |
    for d in /sys/kernel/iommu_groups/*/devices/*; do
        n=${d#*/iommu_groups/*}; n=${n%%/*}
        printf 'IOMMU Group %s ' "$n"
        lspci -nns "${d##*/}"
    done
  register: gpu_groups

- name: Identify GPU IOMMU groups (containing VGA/Display/3D controllers)
  ansible.builtin.set_fact:
    gpu_iommu_groups: "{{ gpu_groups.stdout_lines | select('search', 'VGA|Display|3D') | map('regex_search', 'IOMMU Group ([0-9]+)', '\\1') | list }}"

- name: Ensure at least two GPU IOMMU groups are present for passthrough
  ansible.builtin.assert:
    that:
      - "gpu_iommu_groups | length >= 2"
    fail_msg: "At least two distinct GPU IOMMU groups are required for GPU passthrough."

# Build the gpus_passthrough structure requested by downstream roles/tasks.
# Each item will look like: ['<group_idx>', '<vendor>', '<vga_id>,<audio_id>']
- name: Construct GPU passthrough fact list
  ansible.builtin.set_fact:
    gpus_passthrough: "{{ (gpus_passthrough | default([])) + [ [ group_id,
                                                  ( ('nvidia' if ('NVIDIA' in vga_line or 'Nvidia' in vga_line) else ( 'intel' if 'Intel' in vga_line else ( 'amd' if ('AMD' in vga_line or 'Advanced' in vga_line) else 'unknown'))) ),
                                                  vga_id ~ (',' ~ audio_id if audio_id else '') ] ] }}"
  loop: "{{ gpu_iommu_groups }}"
  loop_control:
    loop_var: group_id
  vars:
    # All lines belonging to the current IOMMU group
    group_lines: "{{ gpu_groups.stdout_lines | select('search', 'IOMMU Group ' + group_id) | list }}"
    # First VGA/Display/3D line in this group
    vga_line: "{{ group_lines | select('search', 'VGA|Display|3D') | first }}"
    # First Audio line (class 0403) in this group, if any
    audio_line: "{{ (group_lines | select('search', 'Audio|0403') | list) | default([]) | first | default('') }}"
    # Extract vendor:device IDs (e.g. 10de:1d01)
    vga_id: "{{ vga_line | regex_search('[0-9a-f]{4}:[0-9a-f]{4}', '\\0') }}"
    audio_id: "{{ (audio_line | regex_search('[0-9a-f]{4}:[0-9a-f]{4}', '\\0') | default('')) }}"

- name: Enable required kernel modules
  ansible.builtin.copy:
    dest: /etc/modules-load.d/vfio.conf
    content: |
      vfio
      vfio_iommu_type1
      vfio_pci
      vfio_virqfd
    mode: '0644'

# NOTE: The vfio-pci IDs are supplied on the kernel command line via custom GRUB menu entries.
# No additional modprobe.d configuration is necessary.
